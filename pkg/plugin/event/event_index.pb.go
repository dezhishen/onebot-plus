// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: event_index.proto

package event

import (
	context "context"
	model "github.com/dezhishen/onebot-sdk/pkg/model"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventMessagePrivateGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                         `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventMessagePrivateGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventMessagePrivateGRPCWithOnebotApi) Reset() {
	*x = EventMessagePrivateGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMessagePrivateGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMessagePrivateGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventMessagePrivateGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMessagePrivateGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventMessagePrivateGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{0}
}

func (x *EventMessagePrivateGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventMessagePrivateGRPCWithOnebotApi) GetMessage() *model.EventMessagePrivateGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventMessageGroupGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                       `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventMessageGroupGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventMessageGroupGRPCWithOnebotApi) Reset() {
	*x = EventMessageGroupGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMessageGroupGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMessageGroupGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventMessageGroupGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMessageGroupGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventMessageGroupGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{1}
}

func (x *EventMessageGroupGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventMessageGroupGRPCWithOnebotApi) GetMessage() *model.EventMessageGroupGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupUploadGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                            `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeGroupUploadGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupUploadGRPCWithOnebotApi) Reset() {
	*x = EventNoticeGroupUploadGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupUploadGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupUploadGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeGroupUploadGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupUploadGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupUploadGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{2}
}

func (x *EventNoticeGroupUploadGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeGroupUploadGRPCWithOnebotApi) GetMessage() *model.EventNoticeGroupUploadGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupAdminGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                           `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeGroupAdminGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupAdminGRPCWithOnebotApi) Reset() {
	*x = EventNoticeGroupAdminGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupAdminGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupAdminGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeGroupAdminGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupAdminGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupAdminGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{3}
}

func (x *EventNoticeGroupAdminGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeGroupAdminGRPCWithOnebotApi) GetMessage() *model.EventNoticeGroupAdminGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupDecreaseGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                              `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeGroupDecreaseGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupDecreaseGRPCWithOnebotApi) Reset() {
	*x = EventNoticeGroupDecreaseGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupDecreaseGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupDecreaseGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeGroupDecreaseGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupDecreaseGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupDecreaseGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{4}
}

func (x *EventNoticeGroupDecreaseGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeGroupDecreaseGRPCWithOnebotApi) GetMessage() *model.EventNoticeGroupDecreaseGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupIncreaseGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                              `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeGroupIncreaseGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupIncreaseGRPCWithOnebotApi) Reset() {
	*x = EventNoticeGroupIncreaseGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupIncreaseGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupIncreaseGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeGroupIncreaseGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupIncreaseGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupIncreaseGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{5}
}

func (x *EventNoticeGroupIncreaseGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeGroupIncreaseGRPCWithOnebotApi) GetMessage() *model.EventNoticeGroupIncreaseGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupBanGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                         `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeGroupBanGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupBanGRPCWithOnebotApi) Reset() {
	*x = EventNoticeGroupBanGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupBanGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupBanGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeGroupBanGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupBanGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupBanGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{6}
}

func (x *EventNoticeGroupBanGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeGroupBanGRPCWithOnebotApi) GetMessage() *model.EventNoticeGroupBanGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeFriendAddGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                          `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeFriendAddGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeFriendAddGRPCWithOnebotApi) Reset() {
	*x = EventNoticeFriendAddGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeFriendAddGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeFriendAddGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeFriendAddGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeFriendAddGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeFriendAddGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{7}
}

func (x *EventNoticeFriendAddGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeFriendAddGRPCWithOnebotApi) GetMessage() *model.EventNoticeFriendAddGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupRecallGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                            `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeGroupRecallGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupRecallGRPCWithOnebotApi) Reset() {
	*x = EventNoticeGroupRecallGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupRecallGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupRecallGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeGroupRecallGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupRecallGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupRecallGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{8}
}

func (x *EventNoticeGroupRecallGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeGroupRecallGRPCWithOnebotApi) GetMessage() *model.EventNoticeGroupRecallGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeFriendRecallGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                             `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeFriendRecallGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeFriendRecallGRPCWithOnebotApi) Reset() {
	*x = EventNoticeFriendRecallGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeFriendRecallGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeFriendRecallGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeFriendRecallGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeFriendRecallGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeFriendRecallGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{9}
}

func (x *EventNoticeFriendRecallGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeFriendRecallGRPCWithOnebotApi) GetMessage() *model.EventNoticeFriendRecallGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupNotifyPokeGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                                `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeGroupNotifyPokeGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupNotifyPokeGRPCWithOnebotApi) Reset() {
	*x = EventNoticeGroupNotifyPokeGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyPokeGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyPokeGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeGroupNotifyPokeGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyPokeGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyPokeGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{10}
}

func (x *EventNoticeGroupNotifyPokeGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeGroupNotifyPokeGRPCWithOnebotApi) GetMessage() *model.EventNoticeGroupNotifyPokeGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupNotifyHonorGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                                 `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeGroupNotifyHonorGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupNotifyHonorGRPCWithOnebotApi) Reset() {
	*x = EventNoticeGroupNotifyHonorGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyHonorGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyHonorGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeGroupNotifyHonorGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyHonorGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyHonorGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{11}
}

func (x *EventNoticeGroupNotifyHonorGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeGroupNotifyHonorGRPCWithOnebotApi) GetMessage() *model.EventNoticeGroupNotifyHonorGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                                     `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventNoticeGroupNotifyLuckyKingGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi) Reset() {
	*x = EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{12}
}

func (x *EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi) GetMessage() *model.EventNoticeGroupNotifyLuckyKingGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventRequestFriendGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                        `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventRequestFriendGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventRequestFriendGRPCWithOnebotApi) Reset() {
	*x = EventRequestFriendGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRequestFriendGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRequestFriendGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventRequestFriendGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRequestFriendGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventRequestFriendGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{13}
}

func (x *EventRequestFriendGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventRequestFriendGRPCWithOnebotApi) GetMessage() *model.EventRequestFriendGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventRequestGroupGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                       `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventRequestGroupGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventRequestGroupGRPCWithOnebotApi) Reset() {
	*x = EventRequestGroupGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRequestGroupGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRequestGroupGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventRequestGroupGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRequestGroupGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventRequestGroupGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{14}
}

func (x *EventRequestGroupGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventRequestGroupGRPCWithOnebotApi) GetMessage() *model.EventRequestGroupGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventMetaLifecycleGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                        `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventMetaLifecycleGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventMetaLifecycleGRPCWithOnebotApi) Reset() {
	*x = EventMetaLifecycleGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMetaLifecycleGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMetaLifecycleGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventMetaLifecycleGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMetaLifecycleGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventMetaLifecycleGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{15}
}

func (x *EventMetaLifecycleGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventMetaLifecycleGRPCWithOnebotApi) GetMessage() *model.EventMetaLifecycleGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventMetaHeartbeatGRPCWithOnebotApi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnebotApi uint32                        `protobuf:"varint,1,opt,name=onebotApi,proto3" json:"onebotApi,omitempty"`
	Message   *model.EventMetaHeartbeatGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventMetaHeartbeatGRPCWithOnebotApi) Reset() {
	*x = EventMetaHeartbeatGRPCWithOnebotApi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_index_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMetaHeartbeatGRPCWithOnebotApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMetaHeartbeatGRPCWithOnebotApi) ProtoMessage() {}

func (x *EventMetaHeartbeatGRPCWithOnebotApi) ProtoReflect() protoreflect.Message {
	mi := &file_event_index_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMetaHeartbeatGRPCWithOnebotApi.ProtoReflect.Descriptor instead.
func (*EventMetaHeartbeatGRPCWithOnebotApi) Descriptor() ([]byte, []int) {
	return file_event_index_proto_rawDescGZIP(), []int{16}
}

func (x *EventMetaHeartbeatGRPCWithOnebotApi) GetOnebotApi() uint32 {
	if x != nil {
		return x.OnebotApi
	}
	return 0
}

func (x *EventMetaHeartbeatGRPCWithOnebotApi) GetMessage() *model.EventMetaHeartbeatGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_event_index_proto protoreflect.FileDescriptor

var file_event_index_proto_rawDesc = []byte{
	0x0a, 0x11, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x13, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e, 0x0a, 0x24, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x47, 0x52,
	0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x38, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7a, 0x0a, 0x22, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x52, 0x50, 0x43,
	0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x36, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x27, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x52,
	0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x3b, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x52, 0x50,
	0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x26, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41,
	0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x41, 0x70, 0x69, 0x12, 0x3a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x88, 0x01, 0x0a, 0x29, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43,
	0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x3d, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50,
	0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x29, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x24, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x47, 0x52, 0x50, 0x43,
	0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x38, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x25, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x47, 0x52,
	0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x39, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x47, 0x52, 0x50, 0x43, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x27, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63,
	0x61, 0x6c, 0x6c, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41,
	0x70, 0x69, 0x12, 0x3b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61,
	0x6c, 0x6c, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x86, 0x01, 0x0a, 0x28, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x47, 0x52, 0x50, 0x43, 0x57,
	0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x47, 0x52, 0x50, 0x43, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x2b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x50, 0x6f, 0x6b, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x6f, 0x6b, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x2c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x47, 0x52, 0x50, 0x43, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x30, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x4b, 0x69, 0x6e, 0x67, 0x47, 0x52, 0x50, 0x43,
	0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x44, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c, 0x75, 0x63, 0x6b, 0x79,
	0x4b, 0x69, 0x6e, 0x67, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x7c, 0x0a, 0x23, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x7a, 0x0a, 0x22, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41,
	0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x41, 0x70, 0x69, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x52,
	0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7c, 0x0a, 0x23, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41,
	0x70, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69,
	0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x47, 0x52, 0x50, 0x43,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7c, 0x0a, 0x23, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x47,
	0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x12, 0x37,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x9c, 0x0d, 0x0a, 0x17, 0x4f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x47,
	0x52, 0x50, 0x43, 0x12, 0x5b, 0x0a, 0x14, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x57, 0x0a, 0x12, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x29, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70,
	0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x17, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x41, 0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5f, 0x0a, 0x16,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x41, 0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x65, 0x0a,
	0x19, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x12, 0x30, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57,
	0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x65, 0x0a, 0x19, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x41, 0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5b, 0x0a, 0x14, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x61, 0x6e, 0x12, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x47,
	0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5d, 0x0a, 0x15, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64,
	0x64, 0x12, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x47, 0x52,
	0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x17, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61,
	0x6c, 0x6c, 0x12, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c,
	0x6c, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41,
	0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x63, 0x0a, 0x18, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x2f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x69, 0x0a, 0x1b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x6f, 0x6b, 0x65, 0x12, 0x32,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50, 0x6f, 0x6b,
	0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41,
	0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6b, 0x0a, 0x1c, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x33, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x47, 0x52,
	0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x73, 0x0a, 0x20, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x4b, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x4b,
	0x69, 0x6e, 0x67, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x41, 0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x13,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x2a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x52,
	0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x12, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x29, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x59, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69,
	0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x41, 0x70, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x13, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65,
	0x61, 0x74, 0x12, 0x2a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x47, 0x52, 0x50,
	0x43, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x41, 0x70, 0x69, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x7a, 0x68, 0x69, 0x73, 0x68, 0x65, 0x6e, 0x2f, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2d, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x3b, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_index_proto_rawDescOnce sync.Once
	file_event_index_proto_rawDescData = file_event_index_proto_rawDesc
)

func file_event_index_proto_rawDescGZIP() []byte {
	file_event_index_proto_rawDescOnce.Do(func() {
		file_event_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_index_proto_rawDescData)
	})
	return file_event_index_proto_rawDescData
}

var file_event_index_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_event_index_proto_goTypes = []interface{}{
	(*EventMessagePrivateGRPCWithOnebotApi)(nil),             // 0: event.EventMessagePrivateGRPCWithOnebotApi
	(*EventMessageGroupGRPCWithOnebotApi)(nil),               // 1: event.EventMessageGroupGRPCWithOnebotApi
	(*EventNoticeGroupUploadGRPCWithOnebotApi)(nil),          // 2: event.EventNoticeGroupUploadGRPCWithOnebotApi
	(*EventNoticeGroupAdminGRPCWithOnebotApi)(nil),           // 3: event.EventNoticeGroupAdminGRPCWithOnebotApi
	(*EventNoticeGroupDecreaseGRPCWithOnebotApi)(nil),        // 4: event.EventNoticeGroupDecreaseGRPCWithOnebotApi
	(*EventNoticeGroupIncreaseGRPCWithOnebotApi)(nil),        // 5: event.EventNoticeGroupIncreaseGRPCWithOnebotApi
	(*EventNoticeGroupBanGRPCWithOnebotApi)(nil),             // 6: event.EventNoticeGroupBanGRPCWithOnebotApi
	(*EventNoticeFriendAddGRPCWithOnebotApi)(nil),            // 7: event.EventNoticeFriendAddGRPCWithOnebotApi
	(*EventNoticeGroupRecallGRPCWithOnebotApi)(nil),          // 8: event.EventNoticeGroupRecallGRPCWithOnebotApi
	(*EventNoticeFriendRecallGRPCWithOnebotApi)(nil),         // 9: event.EventNoticeFriendRecallGRPCWithOnebotApi
	(*EventNoticeGroupNotifyPokeGRPCWithOnebotApi)(nil),      // 10: event.EventNoticeGroupNotifyPokeGRPCWithOnebotApi
	(*EventNoticeGroupNotifyHonorGRPCWithOnebotApi)(nil),     // 11: event.EventNoticeGroupNotifyHonorGRPCWithOnebotApi
	(*EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi)(nil), // 12: event.EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi
	(*EventRequestFriendGRPCWithOnebotApi)(nil),              // 13: event.EventRequestFriendGRPCWithOnebotApi
	(*EventRequestGroupGRPCWithOnebotApi)(nil),               // 14: event.EventRequestGroupGRPCWithOnebotApi
	(*EventMetaLifecycleGRPCWithOnebotApi)(nil),              // 15: event.EventMetaLifecycleGRPCWithOnebotApi
	(*EventMetaHeartbeatGRPCWithOnebotApi)(nil),              // 16: event.EventMetaHeartbeatGRPCWithOnebotApi
	(*model.EventMessagePrivateGRPC)(nil),                    // 17: model.EventMessagePrivateGRPC
	(*model.EventMessageGroupGRPC)(nil),                      // 18: model.EventMessageGroupGRPC
	(*model.EventNoticeGroupUploadGRPC)(nil),                 // 19: model.EventNoticeGroupUploadGRPC
	(*model.EventNoticeGroupAdminGRPC)(nil),                  // 20: model.EventNoticeGroupAdminGRPC
	(*model.EventNoticeGroupDecreaseGRPC)(nil),               // 21: model.EventNoticeGroupDecreaseGRPC
	(*model.EventNoticeGroupIncreaseGRPC)(nil),               // 22: model.EventNoticeGroupIncreaseGRPC
	(*model.EventNoticeGroupBanGRPC)(nil),                    // 23: model.EventNoticeGroupBanGRPC
	(*model.EventNoticeFriendAddGRPC)(nil),                   // 24: model.EventNoticeFriendAddGRPC
	(*model.EventNoticeGroupRecallGRPC)(nil),                 // 25: model.EventNoticeGroupRecallGRPC
	(*model.EventNoticeFriendRecallGRPC)(nil),                // 26: model.EventNoticeFriendRecallGRPC
	(*model.EventNoticeGroupNotifyPokeGRPC)(nil),             // 27: model.EventNoticeGroupNotifyPokeGRPC
	(*model.EventNoticeGroupNotifyHonorGRPC)(nil),            // 28: model.EventNoticeGroupNotifyHonorGRPC
	(*model.EventNoticeGroupNotifyLuckyKingGRPC)(nil),        // 29: model.EventNoticeGroupNotifyLuckyKingGRPC
	(*model.EventRequestFriendGRPC)(nil),                     // 30: model.EventRequestFriendGRPC
	(*model.EventRequestGroupGRPC)(nil),                      // 31: model.EventRequestGroupGRPC
	(*model.EventMetaLifecycleGRPC)(nil),                     // 32: model.EventMetaLifecycleGRPC
	(*model.EventMetaHeartbeatGRPC)(nil),                     // 33: model.EventMetaHeartbeatGRPC
	(*emptypb.Empty)(nil),                                    // 34: google.protobuf.Empty
}
var file_event_index_proto_depIdxs = []int32{
	17, // 0: event.EventMessagePrivateGRPCWithOnebotApi.message:type_name -> model.EventMessagePrivateGRPC
	18, // 1: event.EventMessageGroupGRPCWithOnebotApi.message:type_name -> model.EventMessageGroupGRPC
	19, // 2: event.EventNoticeGroupUploadGRPCWithOnebotApi.message:type_name -> model.EventNoticeGroupUploadGRPC
	20, // 3: event.EventNoticeGroupAdminGRPCWithOnebotApi.message:type_name -> model.EventNoticeGroupAdminGRPC
	21, // 4: event.EventNoticeGroupDecreaseGRPCWithOnebotApi.message:type_name -> model.EventNoticeGroupDecreaseGRPC
	22, // 5: event.EventNoticeGroupIncreaseGRPCWithOnebotApi.message:type_name -> model.EventNoticeGroupIncreaseGRPC
	23, // 6: event.EventNoticeGroupBanGRPCWithOnebotApi.message:type_name -> model.EventNoticeGroupBanGRPC
	24, // 7: event.EventNoticeFriendAddGRPCWithOnebotApi.message:type_name -> model.EventNoticeFriendAddGRPC
	25, // 8: event.EventNoticeGroupRecallGRPCWithOnebotApi.message:type_name -> model.EventNoticeGroupRecallGRPC
	26, // 9: event.EventNoticeFriendRecallGRPCWithOnebotApi.message:type_name -> model.EventNoticeFriendRecallGRPC
	27, // 10: event.EventNoticeGroupNotifyPokeGRPCWithOnebotApi.message:type_name -> model.EventNoticeGroupNotifyPokeGRPC
	28, // 11: event.EventNoticeGroupNotifyHonorGRPCWithOnebotApi.message:type_name -> model.EventNoticeGroupNotifyHonorGRPC
	29, // 12: event.EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi.message:type_name -> model.EventNoticeGroupNotifyLuckyKingGRPC
	30, // 13: event.EventRequestFriendGRPCWithOnebotApi.message:type_name -> model.EventRequestFriendGRPC
	31, // 14: event.EventRequestGroupGRPCWithOnebotApi.message:type_name -> model.EventRequestGroupGRPC
	32, // 15: event.EventMetaLifecycleGRPCWithOnebotApi.message:type_name -> model.EventMetaLifecycleGRPC
	33, // 16: event.EventMetaHeartbeatGRPCWithOnebotApi.message:type_name -> model.EventMetaHeartbeatGRPC
	0,  // 17: event.OnebotEventCallbackGRPC.HandleMessagePrivate:input_type -> event.EventMessagePrivateGRPCWithOnebotApi
	1,  // 18: event.OnebotEventCallbackGRPC.HandleMessageGroup:input_type -> event.EventMessageGroupGRPCWithOnebotApi
	2,  // 19: event.OnebotEventCallbackGRPC.HandleNoticeGroupUpload:input_type -> event.EventNoticeGroupUploadGRPCWithOnebotApi
	3,  // 20: event.OnebotEventCallbackGRPC.HandleNoticeGroupAdmin:input_type -> event.EventNoticeGroupAdminGRPCWithOnebotApi
	4,  // 21: event.OnebotEventCallbackGRPC.HandleNoticeGroupDecrease:input_type -> event.EventNoticeGroupDecreaseGRPCWithOnebotApi
	5,  // 22: event.OnebotEventCallbackGRPC.HandleNoticeGroupIncrease:input_type -> event.EventNoticeGroupIncreaseGRPCWithOnebotApi
	6,  // 23: event.OnebotEventCallbackGRPC.HandleNoticeGroupBan:input_type -> event.EventNoticeGroupBanGRPCWithOnebotApi
	7,  // 24: event.OnebotEventCallbackGRPC.HandleNoticeFriendAdd:input_type -> event.EventNoticeFriendAddGRPCWithOnebotApi
	8,  // 25: event.OnebotEventCallbackGRPC.HandleNoticeGroupRecall:input_type -> event.EventNoticeGroupRecallGRPCWithOnebotApi
	9,  // 26: event.OnebotEventCallbackGRPC.HandleNoticeFriendRecall:input_type -> event.EventNoticeFriendRecallGRPCWithOnebotApi
	10, // 27: event.OnebotEventCallbackGRPC.HandleNoticeGroupNotifyPoke:input_type -> event.EventNoticeGroupNotifyPokeGRPCWithOnebotApi
	11, // 28: event.OnebotEventCallbackGRPC.HandleNoticeGroupNotifyHonor:input_type -> event.EventNoticeGroupNotifyHonorGRPCWithOnebotApi
	12, // 29: event.OnebotEventCallbackGRPC.HandleNoticeGroupNotifyLuckyKing:input_type -> event.EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi
	13, // 30: event.OnebotEventCallbackGRPC.HandleRequestFriend:input_type -> event.EventRequestFriendGRPCWithOnebotApi
	14, // 31: event.OnebotEventCallbackGRPC.HandleRequestGroup:input_type -> event.EventRequestGroupGRPCWithOnebotApi
	15, // 32: event.OnebotEventCallbackGRPC.HandleMetaLifecycle:input_type -> event.EventMetaLifecycleGRPCWithOnebotApi
	16, // 33: event.OnebotEventCallbackGRPC.HandleMetaHeartBeat:input_type -> event.EventMetaHeartbeatGRPCWithOnebotApi
	34, // 34: event.OnebotEventCallbackGRPC.HandleMessagePrivate:output_type -> google.protobuf.Empty
	34, // 35: event.OnebotEventCallbackGRPC.HandleMessageGroup:output_type -> google.protobuf.Empty
	34, // 36: event.OnebotEventCallbackGRPC.HandleNoticeGroupUpload:output_type -> google.protobuf.Empty
	34, // 37: event.OnebotEventCallbackGRPC.HandleNoticeGroupAdmin:output_type -> google.protobuf.Empty
	34, // 38: event.OnebotEventCallbackGRPC.HandleNoticeGroupDecrease:output_type -> google.protobuf.Empty
	34, // 39: event.OnebotEventCallbackGRPC.HandleNoticeGroupIncrease:output_type -> google.protobuf.Empty
	34, // 40: event.OnebotEventCallbackGRPC.HandleNoticeGroupBan:output_type -> google.protobuf.Empty
	34, // 41: event.OnebotEventCallbackGRPC.HandleNoticeFriendAdd:output_type -> google.protobuf.Empty
	34, // 42: event.OnebotEventCallbackGRPC.HandleNoticeGroupRecall:output_type -> google.protobuf.Empty
	34, // 43: event.OnebotEventCallbackGRPC.HandleNoticeFriendRecall:output_type -> google.protobuf.Empty
	34, // 44: event.OnebotEventCallbackGRPC.HandleNoticeGroupNotifyPoke:output_type -> google.protobuf.Empty
	34, // 45: event.OnebotEventCallbackGRPC.HandleNoticeGroupNotifyHonor:output_type -> google.protobuf.Empty
	34, // 46: event.OnebotEventCallbackGRPC.HandleNoticeGroupNotifyLuckyKing:output_type -> google.protobuf.Empty
	34, // 47: event.OnebotEventCallbackGRPC.HandleRequestFriend:output_type -> google.protobuf.Empty
	34, // 48: event.OnebotEventCallbackGRPC.HandleRequestGroup:output_type -> google.protobuf.Empty
	34, // 49: event.OnebotEventCallbackGRPC.HandleMetaLifecycle:output_type -> google.protobuf.Empty
	34, // 50: event.OnebotEventCallbackGRPC.HandleMetaHeartBeat:output_type -> google.protobuf.Empty
	34, // [34:51] is the sub-list for method output_type
	17, // [17:34] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_event_index_proto_init() }
func file_event_index_proto_init() {
	if File_event_index_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMessagePrivateGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMessageGroupGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupUploadGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupAdminGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupDecreaseGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupIncreaseGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupBanGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeFriendAddGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupRecallGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeFriendRecallGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyPokeGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyHonorGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRequestFriendGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRequestGroupGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMetaLifecycleGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_index_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMetaHeartbeatGRPCWithOnebotApi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_index_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_index_proto_goTypes,
		DependencyIndexes: file_event_index_proto_depIdxs,
		MessageInfos:      file_event_index_proto_msgTypes,
	}.Build()
	File_event_index_proto = out.File
	file_event_index_proto_rawDesc = nil
	file_event_index_proto_goTypes = nil
	file_event_index_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OnebotEventCallbackGRPCClient is the client API for OnebotEventCallbackGRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnebotEventCallbackGRPCClient interface {
	// HandleMessagePrivate(data *model.EventMessagePrivate, onebotApi api.OnebotAPiClientInterface) error
	HandleMessagePrivate(ctx context.Context, in *EventMessagePrivateGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleMessageGroup(data *model.EventMessageGroup, onebotApi api.OnebotAPiClientInterface) error
	HandleMessageGroup(ctx context.Context, in *EventMessageGroupGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeGroupUpload(data *model.EventNoticeGroupUpload, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupUpload(ctx context.Context, in *EventNoticeGroupUploadGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeGroupAdmin(data *model.EventNoticeGroupAdmin, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupAdmin(ctx context.Context, in *EventNoticeGroupAdminGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeGroupDecrease(data *model.EventNoticeGroupDecrease, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupDecrease(ctx context.Context, in *EventNoticeGroupDecreaseGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeGroupIncrease(data *model.EventNoticeGroupIncrease, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupIncrease(ctx context.Context, in *EventNoticeGroupIncreaseGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeGroupBan(data *model.EventNoticeGroupBan, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupBan(ctx context.Context, in *EventNoticeGroupBanGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeFriendAdd(data *model.EventNoticeFriendAdd, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeFriendAdd(ctx context.Context, in *EventNoticeFriendAddGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeGroupRecall(data *model.EventNoticeGroupRecall, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupRecall(ctx context.Context, in *EventNoticeGroupRecallGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeFriendRecall(data *model.EventNoticeFriendRecall, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeFriendRecall(ctx context.Context, in *EventNoticeFriendRecallGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeGroupNotifyPoke(data *model.EventNoticeGroupNotifyPoke, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupNotifyPoke(ctx context.Context, in *EventNoticeGroupNotifyPokeGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeGroupNotifyHonor(data *model.EventNoticeGroupNotifyHonor, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupNotifyHonor(ctx context.Context, in *EventNoticeGroupNotifyHonorGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleNoticeGroupNotifyLuckyKing(data *model.EventNoticeGroupNotifyLuckyKing, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupNotifyLuckyKing(ctx context.Context, in *EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleRequestFriend(data *model.EventRequestFriend, onebotApi api.OnebotAPiClientInterface) error
	HandleRequestFriend(ctx context.Context, in *EventRequestFriendGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleRequestGroup(data *model.EventRequestGroup, onebotApi api.OnebotAPiClientInterface) error
	HandleRequestGroup(ctx context.Context, in *EventRequestGroupGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleMetaLifecycle(data *model.EventMetaLifecycle, onebotApi api.OnebotAPiClientInterface) error
	HandleMetaLifecycle(ctx context.Context, in *EventMetaLifecycleGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// HandleMetaHeartBeat(data *model.EventMetaHeartbeat, onebotApi api.OnebotAPiClientInterface) error
	HandleMetaHeartBeat(ctx context.Context, in *EventMetaHeartbeatGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type onebotEventCallbackGRPCClient struct {
	cc grpc.ClientConnInterface
}

func NewOnebotEventCallbackGRPCClient(cc grpc.ClientConnInterface) OnebotEventCallbackGRPCClient {
	return &onebotEventCallbackGRPCClient{cc}
}

func (c *onebotEventCallbackGRPCClient) HandleMessagePrivate(ctx context.Context, in *EventMessagePrivateGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleMessagePrivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleMessageGroup(ctx context.Context, in *EventMessageGroupGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleMessageGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeGroupUpload(ctx context.Context, in *EventNoticeGroupUploadGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeGroupUpload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeGroupAdmin(ctx context.Context, in *EventNoticeGroupAdminGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeGroupAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeGroupDecrease(ctx context.Context, in *EventNoticeGroupDecreaseGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeGroupDecrease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeGroupIncrease(ctx context.Context, in *EventNoticeGroupIncreaseGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeGroupIncrease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeGroupBan(ctx context.Context, in *EventNoticeGroupBanGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeGroupBan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeFriendAdd(ctx context.Context, in *EventNoticeFriendAddGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeFriendAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeGroupRecall(ctx context.Context, in *EventNoticeGroupRecallGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeGroupRecall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeFriendRecall(ctx context.Context, in *EventNoticeFriendRecallGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeFriendRecall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeGroupNotifyPoke(ctx context.Context, in *EventNoticeGroupNotifyPokeGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeGroupNotifyPoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeGroupNotifyHonor(ctx context.Context, in *EventNoticeGroupNotifyHonorGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeGroupNotifyHonor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleNoticeGroupNotifyLuckyKing(ctx context.Context, in *EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleNoticeGroupNotifyLuckyKing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleRequestFriend(ctx context.Context, in *EventRequestFriendGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleRequestFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleRequestGroup(ctx context.Context, in *EventRequestGroupGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleRequestGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleMetaLifecycle(ctx context.Context, in *EventMetaLifecycleGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleMetaLifecycle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventCallbackGRPCClient) HandleMetaHeartBeat(ctx context.Context, in *EventMetaHeartbeatGRPCWithOnebotApi, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventCallbackGRPC/HandleMetaHeartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnebotEventCallbackGRPCServer is the server API for OnebotEventCallbackGRPC service.
type OnebotEventCallbackGRPCServer interface {
	// HandleMessagePrivate(data *model.EventMessagePrivate, onebotApi api.OnebotAPiClientInterface) error
	HandleMessagePrivate(context.Context, *EventMessagePrivateGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleMessageGroup(data *model.EventMessageGroup, onebotApi api.OnebotAPiClientInterface) error
	HandleMessageGroup(context.Context, *EventMessageGroupGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeGroupUpload(data *model.EventNoticeGroupUpload, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupUpload(context.Context, *EventNoticeGroupUploadGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeGroupAdmin(data *model.EventNoticeGroupAdmin, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupAdmin(context.Context, *EventNoticeGroupAdminGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeGroupDecrease(data *model.EventNoticeGroupDecrease, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupDecrease(context.Context, *EventNoticeGroupDecreaseGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeGroupIncrease(data *model.EventNoticeGroupIncrease, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupIncrease(context.Context, *EventNoticeGroupIncreaseGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeGroupBan(data *model.EventNoticeGroupBan, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupBan(context.Context, *EventNoticeGroupBanGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeFriendAdd(data *model.EventNoticeFriendAdd, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeFriendAdd(context.Context, *EventNoticeFriendAddGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeGroupRecall(data *model.EventNoticeGroupRecall, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupRecall(context.Context, *EventNoticeGroupRecallGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeFriendRecall(data *model.EventNoticeFriendRecall, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeFriendRecall(context.Context, *EventNoticeFriendRecallGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeGroupNotifyPoke(data *model.EventNoticeGroupNotifyPoke, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupNotifyPoke(context.Context, *EventNoticeGroupNotifyPokeGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeGroupNotifyHonor(data *model.EventNoticeGroupNotifyHonor, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupNotifyHonor(context.Context, *EventNoticeGroupNotifyHonorGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleNoticeGroupNotifyLuckyKing(data *model.EventNoticeGroupNotifyLuckyKing, onebotApi api.OnebotAPiClientInterface) error
	HandleNoticeGroupNotifyLuckyKing(context.Context, *EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleRequestFriend(data *model.EventRequestFriend, onebotApi api.OnebotAPiClientInterface) error
	HandleRequestFriend(context.Context, *EventRequestFriendGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleRequestGroup(data *model.EventRequestGroup, onebotApi api.OnebotAPiClientInterface) error
	HandleRequestGroup(context.Context, *EventRequestGroupGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleMetaLifecycle(data *model.EventMetaLifecycle, onebotApi api.OnebotAPiClientInterface) error
	HandleMetaLifecycle(context.Context, *EventMetaLifecycleGRPCWithOnebotApi) (*emptypb.Empty, error)
	// HandleMetaHeartBeat(data *model.EventMetaHeartbeat, onebotApi api.OnebotAPiClientInterface) error
	HandleMetaHeartBeat(context.Context, *EventMetaHeartbeatGRPCWithOnebotApi) (*emptypb.Empty, error)
}

// UnimplementedOnebotEventCallbackGRPCServer can be embedded to have forward compatible implementations.
type UnimplementedOnebotEventCallbackGRPCServer struct {
}

func (*UnimplementedOnebotEventCallbackGRPCServer) HandleMessagePrivate(context.Context, *EventMessagePrivateGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMessagePrivate not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleMessageGroup(context.Context, *EventMessageGroupGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMessageGroup not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeGroupUpload(context.Context, *EventNoticeGroupUploadGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeGroupUpload not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeGroupAdmin(context.Context, *EventNoticeGroupAdminGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeGroupAdmin not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeGroupDecrease(context.Context, *EventNoticeGroupDecreaseGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeGroupDecrease not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeGroupIncrease(context.Context, *EventNoticeGroupIncreaseGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeGroupIncrease not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeGroupBan(context.Context, *EventNoticeGroupBanGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeGroupBan not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeFriendAdd(context.Context, *EventNoticeFriendAddGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeFriendAdd not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeGroupRecall(context.Context, *EventNoticeGroupRecallGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeGroupRecall not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeFriendRecall(context.Context, *EventNoticeFriendRecallGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeFriendRecall not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeGroupNotifyPoke(context.Context, *EventNoticeGroupNotifyPokeGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeGroupNotifyPoke not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeGroupNotifyHonor(context.Context, *EventNoticeGroupNotifyHonorGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeGroupNotifyHonor not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleNoticeGroupNotifyLuckyKing(context.Context, *EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleNoticeGroupNotifyLuckyKing not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleRequestFriend(context.Context, *EventRequestFriendGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleRequestFriend not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleRequestGroup(context.Context, *EventRequestGroupGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleRequestGroup not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleMetaLifecycle(context.Context, *EventMetaLifecycleGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMetaLifecycle not implemented")
}
func (*UnimplementedOnebotEventCallbackGRPCServer) HandleMetaHeartBeat(context.Context, *EventMetaHeartbeatGRPCWithOnebotApi) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleMetaHeartBeat not implemented")
}

func RegisterOnebotEventCallbackGRPCServer(s *grpc.Server, srv OnebotEventCallbackGRPCServer) {
	s.RegisterService(&_OnebotEventCallbackGRPC_serviceDesc, srv)
}

func _OnebotEventCallbackGRPC_HandleMessagePrivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMessagePrivateGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleMessagePrivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleMessagePrivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleMessagePrivate(ctx, req.(*EventMessagePrivateGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleMessageGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMessageGroupGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleMessageGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleMessageGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleMessageGroup(ctx, req.(*EventMessageGroupGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeGroupUpload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupUploadGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupUpload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeGroupUpload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupUpload(ctx, req.(*EventNoticeGroupUploadGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeGroupAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupAdminGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeGroupAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupAdmin(ctx, req.(*EventNoticeGroupAdminGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeGroupDecrease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupDecreaseGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupDecrease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeGroupDecrease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupDecrease(ctx, req.(*EventNoticeGroupDecreaseGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeGroupIncrease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupIncreaseGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupIncrease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeGroupIncrease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupIncrease(ctx, req.(*EventNoticeGroupIncreaseGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeGroupBan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupBanGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupBan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeGroupBan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupBan(ctx, req.(*EventNoticeGroupBanGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeFriendAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeFriendAddGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeFriendAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeFriendAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeFriendAdd(ctx, req.(*EventNoticeFriendAddGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeGroupRecall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupRecallGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupRecall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeGroupRecall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupRecall(ctx, req.(*EventNoticeGroupRecallGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeFriendRecall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeFriendRecallGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeFriendRecall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeFriendRecall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeFriendRecall(ctx, req.(*EventNoticeFriendRecallGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeGroupNotifyPoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupNotifyPokeGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupNotifyPoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeGroupNotifyPoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupNotifyPoke(ctx, req.(*EventNoticeGroupNotifyPokeGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeGroupNotifyHonor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupNotifyHonorGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupNotifyHonor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeGroupNotifyHonor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupNotifyHonor(ctx, req.(*EventNoticeGroupNotifyHonorGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleNoticeGroupNotifyLuckyKing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupNotifyLuckyKing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleNoticeGroupNotifyLuckyKing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleNoticeGroupNotifyLuckyKing(ctx, req.(*EventNoticeGroupNotifyLuckyKingGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleRequestFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventRequestFriendGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleRequestFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleRequestFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleRequestFriend(ctx, req.(*EventRequestFriendGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleRequestGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventRequestGroupGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleRequestGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleRequestGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleRequestGroup(ctx, req.(*EventRequestGroupGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleMetaLifecycle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMetaLifecycleGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleMetaLifecycle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleMetaLifecycle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleMetaLifecycle(ctx, req.(*EventMetaLifecycleGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventCallbackGRPC_HandleMetaHeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMetaHeartbeatGRPCWithOnebotApi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventCallbackGRPCServer).HandleMetaHeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventCallbackGRPC/HandleMetaHeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventCallbackGRPCServer).HandleMetaHeartBeat(ctx, req.(*EventMetaHeartbeatGRPCWithOnebotApi))
	}
	return interceptor(ctx, in, info, handler)
}

var _OnebotEventCallbackGRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "event.OnebotEventCallbackGRPC",
	HandlerType: (*OnebotEventCallbackGRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleMessagePrivate",
			Handler:    _OnebotEventCallbackGRPC_HandleMessagePrivate_Handler,
		},
		{
			MethodName: "HandleMessageGroup",
			Handler:    _OnebotEventCallbackGRPC_HandleMessageGroup_Handler,
		},
		{
			MethodName: "HandleNoticeGroupUpload",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeGroupUpload_Handler,
		},
		{
			MethodName: "HandleNoticeGroupAdmin",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeGroupAdmin_Handler,
		},
		{
			MethodName: "HandleNoticeGroupDecrease",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeGroupDecrease_Handler,
		},
		{
			MethodName: "HandleNoticeGroupIncrease",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeGroupIncrease_Handler,
		},
		{
			MethodName: "HandleNoticeGroupBan",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeGroupBan_Handler,
		},
		{
			MethodName: "HandleNoticeFriendAdd",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeFriendAdd_Handler,
		},
		{
			MethodName: "HandleNoticeGroupRecall",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeGroupRecall_Handler,
		},
		{
			MethodName: "HandleNoticeFriendRecall",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeFriendRecall_Handler,
		},
		{
			MethodName: "HandleNoticeGroupNotifyPoke",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeGroupNotifyPoke_Handler,
		},
		{
			MethodName: "HandleNoticeGroupNotifyHonor",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeGroupNotifyHonor_Handler,
		},
		{
			MethodName: "HandleNoticeGroupNotifyLuckyKing",
			Handler:    _OnebotEventCallbackGRPC_HandleNoticeGroupNotifyLuckyKing_Handler,
		},
		{
			MethodName: "HandleRequestFriend",
			Handler:    _OnebotEventCallbackGRPC_HandleRequestFriend_Handler,
		},
		{
			MethodName: "HandleRequestGroup",
			Handler:    _OnebotEventCallbackGRPC_HandleRequestGroup_Handler,
		},
		{
			MethodName: "HandleMetaLifecycle",
			Handler:    _OnebotEventCallbackGRPC_HandleMetaLifecycle_Handler,
		},
		{
			MethodName: "HandleMetaHeartBeat",
			Handler:    _OnebotEventCallbackGRPC_HandleMetaHeartBeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event_index.proto",
}
