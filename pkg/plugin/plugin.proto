syntax = "proto3";
package event;
import "onebot-sdk/pkg/proto/event_message.proto";
import "onebot-sdk/pkg/proto/event_meta.proto";
import "onebot-sdk/pkg/proto/event_notice.proto";
import "onebot-sdk/pkg/proto/event_request.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
option go_package="../plugin";

message EventMessagePrivateGRPCWithCli {
    uint32 cli = 1;
    model.EventMessagePrivateGRPC message = 2;
}

message EventMessageGroupGRPCWithCli{
    uint32 cli = 1;
    model.EventMessageGroupGRPC message= 2;
}

message EventMetaLifecycleGRPCWithCli {
    uint32 cli = 1;
    model.EventMetaLifecycleGRPC message= 2;
}

message EventMetaHeartbeatGRPCWithCli {
    uint32 cli = 1;
    model.EventMetaHeartbeatGRPC message= 2;
}

message EventNoticeGroupUploadGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeGroupUploadGRPC message= 2;
}

message EventNoticeGroupAdminGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeGroupAdminGRPC message= 2;
}
message EventNoticeGroupDecreaseGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeGroupDecreaseGRPC message = 2;
}

message EventNoticeGroupIncreaseGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeGroupIncreaseGRPC message= 2;
}

message EventNoticeGroupBanGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeGroupBanGRPC message= 2;
}

message EventNoticeGroupRecallGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeGroupRecallGRPC message= 2;
}

message EventNoticeGroupNotifyPokeGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeGroupNotifyPokeGRPC message= 2;
}

message EventNoticeGroupNotifyLuckyKingGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeGroupNotifyLuckyKingGRPC message= 2;
} 
message EventNoticeGroupNotifyHonorGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeGroupNotifyHonorGRPC message= 2;
}
message EventNoticeFriendAddGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeFriendAddGRPC message= 2;
}

message EventNoticeFriendRecallGRPCWithCli {
    uint32 cli = 1;
    model.EventNoticeFriendRecallGRPC message= 2;
}
message EventRequestFriendGRPCWithCli {
    uint32 cli = 1;
    model.EventRequestFriendGRPC message= 2;
} 
message EventRequestGroupGRPCWithCli {
    uint32 cli = 1;
    model.EventRequestGroupGRPC  message= 2;
} 
service OnebotEventGRPC {
     //插件Id
     rpc Id(google.protobuf.Empty)returns(google.protobuf.StringValue);
     //插件名称
     rpc Name(google.protobuf.Empty)returns(google.protobuf.StringValue);
     //插件描述
     rpc Description(google.protobuf.Empty)returns(google.protobuf.StringValue);
     //插件帮助
     rpc Help(google.protobuf.Empty)returns(google.protobuf.StringValue);
     //初始化
     rpc Init(google.protobuf.UInt32Value) returns(google.protobuf.Empty);
     //初始化
     rpc BeforeExit(google.protobuf.UInt32Value) returns(google.protobuf.Empty);
     //私聊消息
     rpc MessagePrivate(EventMessagePrivateGRPCWithCli)returns(google.protobuf.Empty);
     //群组消息
     rpc MessageGroup(EventMessageGroupGRPCWithCli)returns(google.protobuf.Empty);
     //
     rpc MetaLifecycle(EventMetaLifecycleGRPCWithCli)returns(google.protobuf.Empty);
     //
     rpc MetaHeartbeat(EventMetaHeartbeatGRPCWithCli)returns(google.protobuf.Empty);
 
     rpc NoticeGroupUpload(EventNoticeGroupUploadGRPCWithCli) returns(google.protobuf.Empty);
 
     rpc NoticeGroupAdmin(EventNoticeGroupAdminGRPCWithCli) returns(google.protobuf.Empty);
 
     rpc NoticeGroupDecrease(EventNoticeGroupDecreaseGRPCWithCli) returns(google.protobuf.Empty);
     
     rpc NoticeGroupIncrease(EventNoticeGroupIncreaseGRPCWithCli) returns(google.protobuf.Empty);
     
     rpc NoticeGroupBan(EventNoticeGroupBanGRPCWithCli) returns(google.protobuf.Empty);
 
     rpc NoticeGroupRecall(EventNoticeGroupRecallGRPCWithCli) returns(google.protobuf.Empty);
 
     rpc NoticeGroupNotifyPoke(EventNoticeGroupNotifyPokeGRPCWithCli) returns(google.protobuf.Empty);
 
     rpc NoticeGroupNotifyLuckyKing(EventNoticeGroupNotifyLuckyKingGRPCWithCli) returns(google.protobuf.Empty);
 
     rpc NoticeGroupNotifyHonor(EventNoticeGroupNotifyHonorGRPCWithCli) returns(google.protobuf.Empty);
 
     rpc NoticeFriendAdd(EventNoticeFriendAddGRPCWithCli) returns(google.protobuf.Empty);
 
     rpc NoticeFriendRecall(EventNoticeFriendRecallGRPCWithCli) returns(google.protobuf.Empty);
 
     rpc RequestFriend(EventRequestFriendGRPCWithCli) returns(google.protobuf.Empty);
     
     rpc RequestGroup(EventRequestGroupGRPCWithCli) returns(google.protobuf.Empty);
 }