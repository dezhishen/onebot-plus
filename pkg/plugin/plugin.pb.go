// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: onebot-plus/pkg/plugin/plugin.proto

package plugin

import (
	model "github.com/dezhishen/onebot-sdk/pkg/model"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventMessagePrivateGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                         `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventMessagePrivateGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventMessagePrivateGRPCWithCli) Reset() {
	*x = EventMessagePrivateGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMessagePrivateGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMessagePrivateGRPCWithCli) ProtoMessage() {}

func (x *EventMessagePrivateGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMessagePrivateGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventMessagePrivateGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *EventMessagePrivateGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventMessagePrivateGRPCWithCli) GetMessage() *model.EventMessagePrivateGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventMessageGroupGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                       `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventMessageGroupGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventMessageGroupGRPCWithCli) Reset() {
	*x = EventMessageGroupGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMessageGroupGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMessageGroupGRPCWithCli) ProtoMessage() {}

func (x *EventMessageGroupGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMessageGroupGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventMessageGroupGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *EventMessageGroupGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventMessageGroupGRPCWithCli) GetMessage() *model.EventMessageGroupGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventMetaLifecycleGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                        `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventMetaLifecycleGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventMetaLifecycleGRPCWithCli) Reset() {
	*x = EventMetaLifecycleGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMetaLifecycleGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMetaLifecycleGRPCWithCli) ProtoMessage() {}

func (x *EventMetaLifecycleGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMetaLifecycleGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventMetaLifecycleGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *EventMetaLifecycleGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventMetaLifecycleGRPCWithCli) GetMessage() *model.EventMetaLifecycleGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventMetaHeartbeatGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                        `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventMetaHeartbeatGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventMetaHeartbeatGRPCWithCli) Reset() {
	*x = EventMetaHeartbeatGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMetaHeartbeatGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMetaHeartbeatGRPCWithCli) ProtoMessage() {}

func (x *EventMetaHeartbeatGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMetaHeartbeatGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventMetaHeartbeatGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *EventMetaHeartbeatGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventMetaHeartbeatGRPCWithCli) GetMessage() *model.EventMetaHeartbeatGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupUploadGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                            `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeGroupUploadGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupUploadGRPCWithCli) Reset() {
	*x = EventNoticeGroupUploadGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupUploadGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupUploadGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeGroupUploadGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupUploadGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupUploadGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *EventNoticeGroupUploadGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeGroupUploadGRPCWithCli) GetMessage() *model.EventNoticeGroupUploadGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupAdminGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                           `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeGroupAdminGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupAdminGRPCWithCli) Reset() {
	*x = EventNoticeGroupAdminGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupAdminGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupAdminGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeGroupAdminGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupAdminGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupAdminGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *EventNoticeGroupAdminGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeGroupAdminGRPCWithCli) GetMessage() *model.EventNoticeGroupAdminGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupDecreaseGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                              `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeGroupDecreaseGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupDecreaseGRPCWithCli) Reset() {
	*x = EventNoticeGroupDecreaseGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupDecreaseGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupDecreaseGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeGroupDecreaseGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupDecreaseGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupDecreaseGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *EventNoticeGroupDecreaseGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeGroupDecreaseGRPCWithCli) GetMessage() *model.EventNoticeGroupDecreaseGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupIncreaseGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                              `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeGroupIncreaseGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupIncreaseGRPCWithCli) Reset() {
	*x = EventNoticeGroupIncreaseGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupIncreaseGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupIncreaseGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeGroupIncreaseGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupIncreaseGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupIncreaseGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *EventNoticeGroupIncreaseGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeGroupIncreaseGRPCWithCli) GetMessage() *model.EventNoticeGroupIncreaseGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupBanGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                         `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeGroupBanGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupBanGRPCWithCli) Reset() {
	*x = EventNoticeGroupBanGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupBanGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupBanGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeGroupBanGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupBanGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupBanGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *EventNoticeGroupBanGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeGroupBanGRPCWithCli) GetMessage() *model.EventNoticeGroupBanGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupRecallGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                            `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeGroupRecallGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupRecallGRPCWithCli) Reset() {
	*x = EventNoticeGroupRecallGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupRecallGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupRecallGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeGroupRecallGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupRecallGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupRecallGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *EventNoticeGroupRecallGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeGroupRecallGRPCWithCli) GetMessage() *model.EventNoticeGroupRecallGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupNotifyPokeGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                                `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeGroupNotifyPokeGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupNotifyPokeGRPCWithCli) Reset() {
	*x = EventNoticeGroupNotifyPokeGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyPokeGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyPokeGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeGroupNotifyPokeGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyPokeGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyPokeGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *EventNoticeGroupNotifyPokeGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeGroupNotifyPokeGRPCWithCli) GetMessage() *model.EventNoticeGroupNotifyPokeGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupNotifyLuckyKingGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                                     `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeGroupNotifyLuckyKingGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupNotifyLuckyKingGRPCWithCli) Reset() {
	*x = EventNoticeGroupNotifyLuckyKingGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyLuckyKingGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyLuckyKingGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeGroupNotifyLuckyKingGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyLuckyKingGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyLuckyKingGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *EventNoticeGroupNotifyLuckyKingGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeGroupNotifyLuckyKingGRPCWithCli) GetMessage() *model.EventNoticeGroupNotifyLuckyKingGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeGroupNotifyHonorGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                                 `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeGroupNotifyHonorGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeGroupNotifyHonorGRPCWithCli) Reset() {
	*x = EventNoticeGroupNotifyHonorGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeGroupNotifyHonorGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeGroupNotifyHonorGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeGroupNotifyHonorGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeGroupNotifyHonorGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeGroupNotifyHonorGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{12}
}

func (x *EventNoticeGroupNotifyHonorGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeGroupNotifyHonorGRPCWithCli) GetMessage() *model.EventNoticeGroupNotifyHonorGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeFriendAddGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                          `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeFriendAddGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeFriendAddGRPCWithCli) Reset() {
	*x = EventNoticeFriendAddGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeFriendAddGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeFriendAddGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeFriendAddGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeFriendAddGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeFriendAddGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *EventNoticeFriendAddGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeFriendAddGRPCWithCli) GetMessage() *model.EventNoticeFriendAddGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventNoticeFriendRecallGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                             `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventNoticeFriendRecallGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventNoticeFriendRecallGRPCWithCli) Reset() {
	*x = EventNoticeFriendRecallGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventNoticeFriendRecallGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventNoticeFriendRecallGRPCWithCli) ProtoMessage() {}

func (x *EventNoticeFriendRecallGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventNoticeFriendRecallGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventNoticeFriendRecallGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *EventNoticeFriendRecallGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventNoticeFriendRecallGRPCWithCli) GetMessage() *model.EventNoticeFriendRecallGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventRequestFriendGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                        `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventRequestFriendGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventRequestFriendGRPCWithCli) Reset() {
	*x = EventRequestFriendGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRequestFriendGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRequestFriendGRPCWithCli) ProtoMessage() {}

func (x *EventRequestFriendGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRequestFriendGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventRequestFriendGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{15}
}

func (x *EventRequestFriendGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventRequestFriendGRPCWithCli) GetMessage() *model.EventRequestFriendGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventRequestGroupGRPCWithCli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cli     uint32                       `protobuf:"varint,1,opt,name=cli,proto3" json:"cli,omitempty"`
	Message *model.EventRequestGroupGRPC `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EventRequestGroupGRPCWithCli) Reset() {
	*x = EventRequestGroupGRPCWithCli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRequestGroupGRPCWithCli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRequestGroupGRPCWithCli) ProtoMessage() {}

func (x *EventRequestGroupGRPCWithCli) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRequestGroupGRPCWithCli.ProtoReflect.Descriptor instead.
func (*EventRequestGroupGRPCWithCli) Descriptor() ([]byte, []int) {
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP(), []int{16}
}

func (x *EventRequestGroupGRPCWithCli) GetCli() uint32 {
	if x != nil {
		return x.Cli
	}
	return 0
}

func (x *EventRequestGroupGRPCWithCli) GetMessage() *model.EventRequestGroupGRPC {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_onebot_plus_pkg_plugin_plugin_proto protoreflect.FileDescriptor

var file_onebot_plus_pkg_plugin_plugin_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2d, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x28, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2d, 0x73,
	0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a,
	0x1e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c,
	0x69, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x47, 0x52,
	0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x1c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x12, 0x36, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x1d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57,
	0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x6a, 0x0a, 0x1d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43,
	0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x63, 0x6c, 0x69, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x72, 0x0a,
	0x21, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43,
	0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x63, 0x6c, 0x69, 0x12, 0x3b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x70, 0x0a, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x12, 0x3a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x23, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x47,
	0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x12, 0x3d, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x47, 0x52,
	0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x23, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43,
	0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x63, 0x6c, 0x69, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x6c, 0x0a, 0x1e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x42, 0x61, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x72, 0x0a, 0x21, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x47, 0x52, 0x50, 0x43, 0x57,
	0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x12, 0x3b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7a, 0x0a, 0x25, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x50,
	0x6f, 0x6b, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69,
	0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x50, 0x6f, 0x6b, 0x65, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x84, 0x01, 0x0a, 0x2a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c, 0x75, 0x63, 0x6b,
	0x79, 0x4b, 0x69, 0x6e, 0x67, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63,
	0x6c, 0x69, 0x12, 0x44, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x4b, 0x69, 0x6e, 0x67, 0x47, 0x52, 0x50, 0x43, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7c, 0x0a, 0x26, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43,
	0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x63, 0x6c, 0x69, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6e, 0x0a, 0x1f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x47, 0x52,
	0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x12, 0x39, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x22, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c,
	0x6c, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x12, 0x3c,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x47,
	0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x1d,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x12,
	0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x52, 0x50, 0x43, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x1c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x52, 0x50,
	0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x52, 0x50, 0x43, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0xc7, 0x0e, 0x0a, 0x0f, 0x4f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x47, 0x52, 0x50, 0x43, 0x12, 0x3a, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x43, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x48, 0x65, 0x6c, 0x70, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x42, 0x0a, 0x0a, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x45, 0x78, 0x69, 0x74, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x23, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x47,
	0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x4d, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x12, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x47, 0x52,
	0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x55, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x27, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a,
	0x13, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x12, 0x2a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x12,
	0x2a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x6e, 0x12, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61,
	0x6e, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68,
	0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5d, 0x0a, 0x15, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x50, 0x6f, 0x6b, 0x65, 0x12, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x50, 0x6f, 0x6b, 0x65, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43,
	0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x67, 0x0a, 0x1a, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c,
	0x75, 0x63, 0x6b, 0x79, 0x4b, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x4b, 0x69, 0x6e, 0x67,
	0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x5f, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x2d, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x6f, 0x6e, 0x6f,
	0x72, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x12, 0x26, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x29, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x47, 0x52, 0x50,
	0x43, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x4d, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x12, 0x24, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x52, 0x50, 0x43,
	0x57, 0x69, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x4b, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x23, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x52, 0x50, 0x43, 0x57, 0x69, 0x74,
	0x68, 0x43, 0x6c, 0x69, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x0b, 0x5a, 0x09,
	0x2e, 0x2e, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_onebot_plus_pkg_plugin_plugin_proto_rawDescOnce sync.Once
	file_onebot_plus_pkg_plugin_plugin_proto_rawDescData = file_onebot_plus_pkg_plugin_plugin_proto_rawDesc
)

func file_onebot_plus_pkg_plugin_plugin_proto_rawDescGZIP() []byte {
	file_onebot_plus_pkg_plugin_plugin_proto_rawDescOnce.Do(func() {
		file_onebot_plus_pkg_plugin_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_onebot_plus_pkg_plugin_plugin_proto_rawDescData)
	})
	return file_onebot_plus_pkg_plugin_plugin_proto_rawDescData
}

var file_onebot_plus_pkg_plugin_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_onebot_plus_pkg_plugin_plugin_proto_goTypes = []interface{}{
	(*EventMessagePrivateGRPCWithCli)(nil),             // 0: event.EventMessagePrivateGRPCWithCli
	(*EventMessageGroupGRPCWithCli)(nil),               // 1: event.EventMessageGroupGRPCWithCli
	(*EventMetaLifecycleGRPCWithCli)(nil),              // 2: event.EventMetaLifecycleGRPCWithCli
	(*EventMetaHeartbeatGRPCWithCli)(nil),              // 3: event.EventMetaHeartbeatGRPCWithCli
	(*EventNoticeGroupUploadGRPCWithCli)(nil),          // 4: event.EventNoticeGroupUploadGRPCWithCli
	(*EventNoticeGroupAdminGRPCWithCli)(nil),           // 5: event.EventNoticeGroupAdminGRPCWithCli
	(*EventNoticeGroupDecreaseGRPCWithCli)(nil),        // 6: event.EventNoticeGroupDecreaseGRPCWithCli
	(*EventNoticeGroupIncreaseGRPCWithCli)(nil),        // 7: event.EventNoticeGroupIncreaseGRPCWithCli
	(*EventNoticeGroupBanGRPCWithCli)(nil),             // 8: event.EventNoticeGroupBanGRPCWithCli
	(*EventNoticeGroupRecallGRPCWithCli)(nil),          // 9: event.EventNoticeGroupRecallGRPCWithCli
	(*EventNoticeGroupNotifyPokeGRPCWithCli)(nil),      // 10: event.EventNoticeGroupNotifyPokeGRPCWithCli
	(*EventNoticeGroupNotifyLuckyKingGRPCWithCli)(nil), // 11: event.EventNoticeGroupNotifyLuckyKingGRPCWithCli
	(*EventNoticeGroupNotifyHonorGRPCWithCli)(nil),     // 12: event.EventNoticeGroupNotifyHonorGRPCWithCli
	(*EventNoticeFriendAddGRPCWithCli)(nil),            // 13: event.EventNoticeFriendAddGRPCWithCli
	(*EventNoticeFriendRecallGRPCWithCli)(nil),         // 14: event.EventNoticeFriendRecallGRPCWithCli
	(*EventRequestFriendGRPCWithCli)(nil),              // 15: event.EventRequestFriendGRPCWithCli
	(*EventRequestGroupGRPCWithCli)(nil),               // 16: event.EventRequestGroupGRPCWithCli
	(*model.EventMessagePrivateGRPC)(nil),              // 17: model.EventMessagePrivateGRPC
	(*model.EventMessageGroupGRPC)(nil),                // 18: model.EventMessageGroupGRPC
	(*model.EventMetaLifecycleGRPC)(nil),               // 19: model.EventMetaLifecycleGRPC
	(*model.EventMetaHeartbeatGRPC)(nil),               // 20: model.EventMetaHeartbeatGRPC
	(*model.EventNoticeGroupUploadGRPC)(nil),           // 21: model.EventNoticeGroupUploadGRPC
	(*model.EventNoticeGroupAdminGRPC)(nil),            // 22: model.EventNoticeGroupAdminGRPC
	(*model.EventNoticeGroupDecreaseGRPC)(nil),         // 23: model.EventNoticeGroupDecreaseGRPC
	(*model.EventNoticeGroupIncreaseGRPC)(nil),         // 24: model.EventNoticeGroupIncreaseGRPC
	(*model.EventNoticeGroupBanGRPC)(nil),              // 25: model.EventNoticeGroupBanGRPC
	(*model.EventNoticeGroupRecallGRPC)(nil),           // 26: model.EventNoticeGroupRecallGRPC
	(*model.EventNoticeGroupNotifyPokeGRPC)(nil),       // 27: model.EventNoticeGroupNotifyPokeGRPC
	(*model.EventNoticeGroupNotifyLuckyKingGRPC)(nil),  // 28: model.EventNoticeGroupNotifyLuckyKingGRPC
	(*model.EventNoticeGroupNotifyHonorGRPC)(nil),      // 29: model.EventNoticeGroupNotifyHonorGRPC
	(*model.EventNoticeFriendAddGRPC)(nil),             // 30: model.EventNoticeFriendAddGRPC
	(*model.EventNoticeFriendRecallGRPC)(nil),          // 31: model.EventNoticeFriendRecallGRPC
	(*model.EventRequestFriendGRPC)(nil),               // 32: model.EventRequestFriendGRPC
	(*model.EventRequestGroupGRPC)(nil),                // 33: model.EventRequestGroupGRPC
	(*emptypb.Empty)(nil),                              // 34: google.protobuf.Empty
	(*wrapperspb.UInt32Value)(nil),                     // 35: google.protobuf.UInt32Value
	(*wrapperspb.StringValue)(nil),                     // 36: google.protobuf.StringValue
}
var file_onebot_plus_pkg_plugin_plugin_proto_depIdxs = []int32{
	17, // 0: event.EventMessagePrivateGRPCWithCli.message:type_name -> model.EventMessagePrivateGRPC
	18, // 1: event.EventMessageGroupGRPCWithCli.message:type_name -> model.EventMessageGroupGRPC
	19, // 2: event.EventMetaLifecycleGRPCWithCli.message:type_name -> model.EventMetaLifecycleGRPC
	20, // 3: event.EventMetaHeartbeatGRPCWithCli.message:type_name -> model.EventMetaHeartbeatGRPC
	21, // 4: event.EventNoticeGroupUploadGRPCWithCli.message:type_name -> model.EventNoticeGroupUploadGRPC
	22, // 5: event.EventNoticeGroupAdminGRPCWithCli.message:type_name -> model.EventNoticeGroupAdminGRPC
	23, // 6: event.EventNoticeGroupDecreaseGRPCWithCli.message:type_name -> model.EventNoticeGroupDecreaseGRPC
	24, // 7: event.EventNoticeGroupIncreaseGRPCWithCli.message:type_name -> model.EventNoticeGroupIncreaseGRPC
	25, // 8: event.EventNoticeGroupBanGRPCWithCli.message:type_name -> model.EventNoticeGroupBanGRPC
	26, // 9: event.EventNoticeGroupRecallGRPCWithCli.message:type_name -> model.EventNoticeGroupRecallGRPC
	27, // 10: event.EventNoticeGroupNotifyPokeGRPCWithCli.message:type_name -> model.EventNoticeGroupNotifyPokeGRPC
	28, // 11: event.EventNoticeGroupNotifyLuckyKingGRPCWithCli.message:type_name -> model.EventNoticeGroupNotifyLuckyKingGRPC
	29, // 12: event.EventNoticeGroupNotifyHonorGRPCWithCli.message:type_name -> model.EventNoticeGroupNotifyHonorGRPC
	30, // 13: event.EventNoticeFriendAddGRPCWithCli.message:type_name -> model.EventNoticeFriendAddGRPC
	31, // 14: event.EventNoticeFriendRecallGRPCWithCli.message:type_name -> model.EventNoticeFriendRecallGRPC
	32, // 15: event.EventRequestFriendGRPCWithCli.message:type_name -> model.EventRequestFriendGRPC
	33, // 16: event.EventRequestGroupGRPCWithCli.message:type_name -> model.EventRequestGroupGRPC
	34, // 17: event.OnebotEventGRPC.Id:input_type -> google.protobuf.Empty
	34, // 18: event.OnebotEventGRPC.Name:input_type -> google.protobuf.Empty
	34, // 19: event.OnebotEventGRPC.Description:input_type -> google.protobuf.Empty
	34, // 20: event.OnebotEventGRPC.Help:input_type -> google.protobuf.Empty
	35, // 21: event.OnebotEventGRPC.Init:input_type -> google.protobuf.UInt32Value
	35, // 22: event.OnebotEventGRPC.BeforeExit:input_type -> google.protobuf.UInt32Value
	0,  // 23: event.OnebotEventGRPC.MessagePrivate:input_type -> event.EventMessagePrivateGRPCWithCli
	1,  // 24: event.OnebotEventGRPC.MessageGroup:input_type -> event.EventMessageGroupGRPCWithCli
	2,  // 25: event.OnebotEventGRPC.MetaLifecycle:input_type -> event.EventMetaLifecycleGRPCWithCli
	3,  // 26: event.OnebotEventGRPC.MetaHeartbeat:input_type -> event.EventMetaHeartbeatGRPCWithCli
	4,  // 27: event.OnebotEventGRPC.NoticeGroupUpload:input_type -> event.EventNoticeGroupUploadGRPCWithCli
	5,  // 28: event.OnebotEventGRPC.NoticeGroupAdmin:input_type -> event.EventNoticeGroupAdminGRPCWithCli
	6,  // 29: event.OnebotEventGRPC.NoticeGroupDecrease:input_type -> event.EventNoticeGroupDecreaseGRPCWithCli
	7,  // 30: event.OnebotEventGRPC.NoticeGroupIncrease:input_type -> event.EventNoticeGroupIncreaseGRPCWithCli
	8,  // 31: event.OnebotEventGRPC.NoticeGroupBan:input_type -> event.EventNoticeGroupBanGRPCWithCli
	9,  // 32: event.OnebotEventGRPC.NoticeGroupRecall:input_type -> event.EventNoticeGroupRecallGRPCWithCli
	10, // 33: event.OnebotEventGRPC.NoticeGroupNotifyPoke:input_type -> event.EventNoticeGroupNotifyPokeGRPCWithCli
	11, // 34: event.OnebotEventGRPC.NoticeGroupNotifyLuckyKing:input_type -> event.EventNoticeGroupNotifyLuckyKingGRPCWithCli
	12, // 35: event.OnebotEventGRPC.NoticeGroupNotifyHonor:input_type -> event.EventNoticeGroupNotifyHonorGRPCWithCli
	13, // 36: event.OnebotEventGRPC.NoticeFriendAdd:input_type -> event.EventNoticeFriendAddGRPCWithCli
	14, // 37: event.OnebotEventGRPC.NoticeFriendRecall:input_type -> event.EventNoticeFriendRecallGRPCWithCli
	15, // 38: event.OnebotEventGRPC.RequestFriend:input_type -> event.EventRequestFriendGRPCWithCli
	16, // 39: event.OnebotEventGRPC.RequestGroup:input_type -> event.EventRequestGroupGRPCWithCli
	36, // 40: event.OnebotEventGRPC.Id:output_type -> google.protobuf.StringValue
	36, // 41: event.OnebotEventGRPC.Name:output_type -> google.protobuf.StringValue
	36, // 42: event.OnebotEventGRPC.Description:output_type -> google.protobuf.StringValue
	36, // 43: event.OnebotEventGRPC.Help:output_type -> google.protobuf.StringValue
	34, // 44: event.OnebotEventGRPC.Init:output_type -> google.protobuf.Empty
	34, // 45: event.OnebotEventGRPC.BeforeExit:output_type -> google.protobuf.Empty
	34, // 46: event.OnebotEventGRPC.MessagePrivate:output_type -> google.protobuf.Empty
	34, // 47: event.OnebotEventGRPC.MessageGroup:output_type -> google.protobuf.Empty
	34, // 48: event.OnebotEventGRPC.MetaLifecycle:output_type -> google.protobuf.Empty
	34, // 49: event.OnebotEventGRPC.MetaHeartbeat:output_type -> google.protobuf.Empty
	34, // 50: event.OnebotEventGRPC.NoticeGroupUpload:output_type -> google.protobuf.Empty
	34, // 51: event.OnebotEventGRPC.NoticeGroupAdmin:output_type -> google.protobuf.Empty
	34, // 52: event.OnebotEventGRPC.NoticeGroupDecrease:output_type -> google.protobuf.Empty
	34, // 53: event.OnebotEventGRPC.NoticeGroupIncrease:output_type -> google.protobuf.Empty
	34, // 54: event.OnebotEventGRPC.NoticeGroupBan:output_type -> google.protobuf.Empty
	34, // 55: event.OnebotEventGRPC.NoticeGroupRecall:output_type -> google.protobuf.Empty
	34, // 56: event.OnebotEventGRPC.NoticeGroupNotifyPoke:output_type -> google.protobuf.Empty
	34, // 57: event.OnebotEventGRPC.NoticeGroupNotifyLuckyKing:output_type -> google.protobuf.Empty
	34, // 58: event.OnebotEventGRPC.NoticeGroupNotifyHonor:output_type -> google.protobuf.Empty
	34, // 59: event.OnebotEventGRPC.NoticeFriendAdd:output_type -> google.protobuf.Empty
	34, // 60: event.OnebotEventGRPC.NoticeFriendRecall:output_type -> google.protobuf.Empty
	34, // 61: event.OnebotEventGRPC.RequestFriend:output_type -> google.protobuf.Empty
	34, // 62: event.OnebotEventGRPC.RequestGroup:output_type -> google.protobuf.Empty
	40, // [40:63] is the sub-list for method output_type
	17, // [17:40] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_onebot_plus_pkg_plugin_plugin_proto_init() }
func file_onebot_plus_pkg_plugin_plugin_proto_init() {
	if File_onebot_plus_pkg_plugin_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMessagePrivateGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMessageGroupGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMetaLifecycleGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMetaHeartbeatGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupUploadGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupAdminGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupDecreaseGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupIncreaseGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupBanGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupRecallGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyPokeGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyLuckyKingGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeGroupNotifyHonorGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeFriendAddGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventNoticeFriendRecallGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRequestFriendGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onebot_plus_pkg_plugin_plugin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRequestGroupGRPCWithCli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_onebot_plus_pkg_plugin_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_onebot_plus_pkg_plugin_plugin_proto_goTypes,
		DependencyIndexes: file_onebot_plus_pkg_plugin_plugin_proto_depIdxs,
		MessageInfos:      file_onebot_plus_pkg_plugin_plugin_proto_msgTypes,
	}.Build()
	File_onebot_plus_pkg_plugin_plugin_proto = out.File
	file_onebot_plus_pkg_plugin_plugin_proto_rawDesc = nil
	file_onebot_plus_pkg_plugin_plugin_proto_goTypes = nil
	file_onebot_plus_pkg_plugin_plugin_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OnebotEventGRPCClient is the client API for OnebotEventGRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnebotEventGRPCClient interface {
	//插件Id
	Id(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*wrapperspb.StringValue, error)
	//插件名称
	Name(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*wrapperspb.StringValue, error)
	//插件描述
	Description(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*wrapperspb.StringValue, error)
	//插件帮助
	Help(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*wrapperspb.StringValue, error)
	//初始化
	Init(ctx context.Context, in *wrapperspb.UInt32Value, opts ...grpc.CallOption) (*emptypb.Empty, error)
	//初始化
	BeforeExit(ctx context.Context, in *wrapperspb.UInt32Value, opts ...grpc.CallOption) (*emptypb.Empty, error)
	//私聊消息
	MessagePrivate(ctx context.Context, in *EventMessagePrivateGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	//群组消息
	MessageGroup(ctx context.Context, in *EventMessageGroupGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	//
	MetaLifecycle(ctx context.Context, in *EventMetaLifecycleGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	//
	MetaHeartbeat(ctx context.Context, in *EventMetaHeartbeatGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeGroupUpload(ctx context.Context, in *EventNoticeGroupUploadGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeGroupAdmin(ctx context.Context, in *EventNoticeGroupAdminGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeGroupDecrease(ctx context.Context, in *EventNoticeGroupDecreaseGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeGroupIncrease(ctx context.Context, in *EventNoticeGroupIncreaseGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeGroupBan(ctx context.Context, in *EventNoticeGroupBanGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeGroupRecall(ctx context.Context, in *EventNoticeGroupRecallGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeGroupNotifyPoke(ctx context.Context, in *EventNoticeGroupNotifyPokeGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeGroupNotifyLuckyKing(ctx context.Context, in *EventNoticeGroupNotifyLuckyKingGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeGroupNotifyHonor(ctx context.Context, in *EventNoticeGroupNotifyHonorGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeFriendAdd(ctx context.Context, in *EventNoticeFriendAddGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	NoticeFriendRecall(ctx context.Context, in *EventNoticeFriendRecallGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RequestFriend(ctx context.Context, in *EventRequestFriendGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RequestGroup(ctx context.Context, in *EventRequestGroupGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type onebotEventGRPCClient struct {
	cc grpc.ClientConnInterface
}

func NewOnebotEventGRPCClient(cc grpc.ClientConnInterface) OnebotEventGRPCClient {
	return &onebotEventGRPCClient{cc}
}

func (c *onebotEventGRPCClient) Id(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*wrapperspb.StringValue, error) {
	out := new(wrapperspb.StringValue)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/Id", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) Name(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*wrapperspb.StringValue, error) {
	out := new(wrapperspb.StringValue)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) Description(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*wrapperspb.StringValue, error) {
	out := new(wrapperspb.StringValue)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/Description", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) Help(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*wrapperspb.StringValue, error) {
	out := new(wrapperspb.StringValue)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/Help", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) Init(ctx context.Context, in *wrapperspb.UInt32Value, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) BeforeExit(ctx context.Context, in *wrapperspb.UInt32Value, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/BeforeExit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) MessagePrivate(ctx context.Context, in *EventMessagePrivateGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/MessagePrivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) MessageGroup(ctx context.Context, in *EventMessageGroupGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/MessageGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) MetaLifecycle(ctx context.Context, in *EventMetaLifecycleGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/MetaLifecycle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) MetaHeartbeat(ctx context.Context, in *EventMetaHeartbeatGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/MetaHeartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeGroupUpload(ctx context.Context, in *EventNoticeGroupUploadGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeGroupUpload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeGroupAdmin(ctx context.Context, in *EventNoticeGroupAdminGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeGroupAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeGroupDecrease(ctx context.Context, in *EventNoticeGroupDecreaseGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeGroupDecrease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeGroupIncrease(ctx context.Context, in *EventNoticeGroupIncreaseGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeGroupIncrease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeGroupBan(ctx context.Context, in *EventNoticeGroupBanGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeGroupBan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeGroupRecall(ctx context.Context, in *EventNoticeGroupRecallGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeGroupRecall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeGroupNotifyPoke(ctx context.Context, in *EventNoticeGroupNotifyPokeGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeGroupNotifyPoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeGroupNotifyLuckyKing(ctx context.Context, in *EventNoticeGroupNotifyLuckyKingGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeGroupNotifyLuckyKing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeGroupNotifyHonor(ctx context.Context, in *EventNoticeGroupNotifyHonorGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeGroupNotifyHonor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeFriendAdd(ctx context.Context, in *EventNoticeFriendAddGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeFriendAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) NoticeFriendRecall(ctx context.Context, in *EventNoticeFriendRecallGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/NoticeFriendRecall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) RequestFriend(ctx context.Context, in *EventRequestFriendGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/RequestFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onebotEventGRPCClient) RequestGroup(ctx context.Context, in *EventRequestGroupGRPCWithCli, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/event.OnebotEventGRPC/RequestGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnebotEventGRPCServer is the server API for OnebotEventGRPC service.
type OnebotEventGRPCServer interface {
	//插件Id
	Id(context.Context, *emptypb.Empty) (*wrapperspb.StringValue, error)
	//插件名称
	Name(context.Context, *emptypb.Empty) (*wrapperspb.StringValue, error)
	//插件描述
	Description(context.Context, *emptypb.Empty) (*wrapperspb.StringValue, error)
	//插件帮助
	Help(context.Context, *emptypb.Empty) (*wrapperspb.StringValue, error)
	//初始化
	Init(context.Context, *wrapperspb.UInt32Value) (*emptypb.Empty, error)
	//初始化
	BeforeExit(context.Context, *wrapperspb.UInt32Value) (*emptypb.Empty, error)
	//私聊消息
	MessagePrivate(context.Context, *EventMessagePrivateGRPCWithCli) (*emptypb.Empty, error)
	//群组消息
	MessageGroup(context.Context, *EventMessageGroupGRPCWithCli) (*emptypb.Empty, error)
	//
	MetaLifecycle(context.Context, *EventMetaLifecycleGRPCWithCli) (*emptypb.Empty, error)
	//
	MetaHeartbeat(context.Context, *EventMetaHeartbeatGRPCWithCli) (*emptypb.Empty, error)
	NoticeGroupUpload(context.Context, *EventNoticeGroupUploadGRPCWithCli) (*emptypb.Empty, error)
	NoticeGroupAdmin(context.Context, *EventNoticeGroupAdminGRPCWithCli) (*emptypb.Empty, error)
	NoticeGroupDecrease(context.Context, *EventNoticeGroupDecreaseGRPCWithCli) (*emptypb.Empty, error)
	NoticeGroupIncrease(context.Context, *EventNoticeGroupIncreaseGRPCWithCli) (*emptypb.Empty, error)
	NoticeGroupBan(context.Context, *EventNoticeGroupBanGRPCWithCli) (*emptypb.Empty, error)
	NoticeGroupRecall(context.Context, *EventNoticeGroupRecallGRPCWithCli) (*emptypb.Empty, error)
	NoticeGroupNotifyPoke(context.Context, *EventNoticeGroupNotifyPokeGRPCWithCli) (*emptypb.Empty, error)
	NoticeGroupNotifyLuckyKing(context.Context, *EventNoticeGroupNotifyLuckyKingGRPCWithCli) (*emptypb.Empty, error)
	NoticeGroupNotifyHonor(context.Context, *EventNoticeGroupNotifyHonorGRPCWithCli) (*emptypb.Empty, error)
	NoticeFriendAdd(context.Context, *EventNoticeFriendAddGRPCWithCli) (*emptypb.Empty, error)
	NoticeFriendRecall(context.Context, *EventNoticeFriendRecallGRPCWithCli) (*emptypb.Empty, error)
	RequestFriend(context.Context, *EventRequestFriendGRPCWithCli) (*emptypb.Empty, error)
	RequestGroup(context.Context, *EventRequestGroupGRPCWithCli) (*emptypb.Empty, error)
}

// UnimplementedOnebotEventGRPCServer can be embedded to have forward compatible implementations.
type UnimplementedOnebotEventGRPCServer struct {
}

func (*UnimplementedOnebotEventGRPCServer) Id(context.Context, *emptypb.Empty) (*wrapperspb.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Id not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) Name(context.Context, *emptypb.Empty) (*wrapperspb.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Name not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) Description(context.Context, *emptypb.Empty) (*wrapperspb.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Description not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) Help(context.Context, *emptypb.Empty) (*wrapperspb.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Help not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) Init(context.Context, *wrapperspb.UInt32Value) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Init not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) BeforeExit(context.Context, *wrapperspb.UInt32Value) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BeforeExit not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) MessagePrivate(context.Context, *EventMessagePrivateGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessagePrivate not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) MessageGroup(context.Context, *EventMessageGroupGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageGroup not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) MetaLifecycle(context.Context, *EventMetaLifecycleGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetaLifecycle not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) MetaHeartbeat(context.Context, *EventMetaHeartbeatGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetaHeartbeat not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeGroupUpload(context.Context, *EventNoticeGroupUploadGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeGroupUpload not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeGroupAdmin(context.Context, *EventNoticeGroupAdminGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeGroupAdmin not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeGroupDecrease(context.Context, *EventNoticeGroupDecreaseGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeGroupDecrease not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeGroupIncrease(context.Context, *EventNoticeGroupIncreaseGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeGroupIncrease not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeGroupBan(context.Context, *EventNoticeGroupBanGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeGroupBan not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeGroupRecall(context.Context, *EventNoticeGroupRecallGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeGroupRecall not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeGroupNotifyPoke(context.Context, *EventNoticeGroupNotifyPokeGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeGroupNotifyPoke not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeGroupNotifyLuckyKing(context.Context, *EventNoticeGroupNotifyLuckyKingGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeGroupNotifyLuckyKing not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeGroupNotifyHonor(context.Context, *EventNoticeGroupNotifyHonorGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeGroupNotifyHonor not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeFriendAdd(context.Context, *EventNoticeFriendAddGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeFriendAdd not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) NoticeFriendRecall(context.Context, *EventNoticeFriendRecallGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoticeFriendRecall not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) RequestFriend(context.Context, *EventRequestFriendGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestFriend not implemented")
}
func (*UnimplementedOnebotEventGRPCServer) RequestGroup(context.Context, *EventRequestGroupGRPCWithCli) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestGroup not implemented")
}

func RegisterOnebotEventGRPCServer(s *grpc.Server, srv OnebotEventGRPCServer) {
	s.RegisterService(&_OnebotEventGRPC_serviceDesc, srv)
}

func _OnebotEventGRPC_Id_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).Id(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/Id",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).Id(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).Name(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_Description_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).Description(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/Description",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).Description(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_Help_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).Help(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/Help",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).Help(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.UInt32Value)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).Init(ctx, req.(*wrapperspb.UInt32Value))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_BeforeExit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrapperspb.UInt32Value)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).BeforeExit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/BeforeExit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).BeforeExit(ctx, req.(*wrapperspb.UInt32Value))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_MessagePrivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMessagePrivateGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).MessagePrivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/MessagePrivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).MessagePrivate(ctx, req.(*EventMessagePrivateGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_MessageGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMessageGroupGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).MessageGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/MessageGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).MessageGroup(ctx, req.(*EventMessageGroupGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_MetaLifecycle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMetaLifecycleGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).MetaLifecycle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/MetaLifecycle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).MetaLifecycle(ctx, req.(*EventMetaLifecycleGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_MetaHeartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMetaHeartbeatGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).MetaHeartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/MetaHeartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).MetaHeartbeat(ctx, req.(*EventMetaHeartbeatGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeGroupUpload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupUploadGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeGroupUpload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeGroupUpload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeGroupUpload(ctx, req.(*EventNoticeGroupUploadGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeGroupAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupAdminGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeGroupAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeGroupAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeGroupAdmin(ctx, req.(*EventNoticeGroupAdminGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeGroupDecrease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupDecreaseGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeGroupDecrease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeGroupDecrease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeGroupDecrease(ctx, req.(*EventNoticeGroupDecreaseGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeGroupIncrease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupIncreaseGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeGroupIncrease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeGroupIncrease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeGroupIncrease(ctx, req.(*EventNoticeGroupIncreaseGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeGroupBan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupBanGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeGroupBan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeGroupBan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeGroupBan(ctx, req.(*EventNoticeGroupBanGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeGroupRecall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupRecallGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeGroupRecall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeGroupRecall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeGroupRecall(ctx, req.(*EventNoticeGroupRecallGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeGroupNotifyPoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupNotifyPokeGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeGroupNotifyPoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeGroupNotifyPoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeGroupNotifyPoke(ctx, req.(*EventNoticeGroupNotifyPokeGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeGroupNotifyLuckyKing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupNotifyLuckyKingGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeGroupNotifyLuckyKing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeGroupNotifyLuckyKing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeGroupNotifyLuckyKing(ctx, req.(*EventNoticeGroupNotifyLuckyKingGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeGroupNotifyHonor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeGroupNotifyHonorGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeGroupNotifyHonor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeGroupNotifyHonor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeGroupNotifyHonor(ctx, req.(*EventNoticeGroupNotifyHonorGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeFriendAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeFriendAddGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeFriendAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeFriendAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeFriendAdd(ctx, req.(*EventNoticeFriendAddGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_NoticeFriendRecall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventNoticeFriendRecallGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).NoticeFriendRecall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/NoticeFriendRecall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).NoticeFriendRecall(ctx, req.(*EventNoticeFriendRecallGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_RequestFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventRequestFriendGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).RequestFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/RequestFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).RequestFriend(ctx, req.(*EventRequestFriendGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnebotEventGRPC_RequestGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventRequestGroupGRPCWithCli)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnebotEventGRPCServer).RequestGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.OnebotEventGRPC/RequestGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnebotEventGRPCServer).RequestGroup(ctx, req.(*EventRequestGroupGRPCWithCli))
	}
	return interceptor(ctx, in, info, handler)
}

var _OnebotEventGRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "event.OnebotEventGRPC",
	HandlerType: (*OnebotEventGRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Id",
			Handler:    _OnebotEventGRPC_Id_Handler,
		},
		{
			MethodName: "Name",
			Handler:    _OnebotEventGRPC_Name_Handler,
		},
		{
			MethodName: "Description",
			Handler:    _OnebotEventGRPC_Description_Handler,
		},
		{
			MethodName: "Help",
			Handler:    _OnebotEventGRPC_Help_Handler,
		},
		{
			MethodName: "Init",
			Handler:    _OnebotEventGRPC_Init_Handler,
		},
		{
			MethodName: "BeforeExit",
			Handler:    _OnebotEventGRPC_BeforeExit_Handler,
		},
		{
			MethodName: "MessagePrivate",
			Handler:    _OnebotEventGRPC_MessagePrivate_Handler,
		},
		{
			MethodName: "MessageGroup",
			Handler:    _OnebotEventGRPC_MessageGroup_Handler,
		},
		{
			MethodName: "MetaLifecycle",
			Handler:    _OnebotEventGRPC_MetaLifecycle_Handler,
		},
		{
			MethodName: "MetaHeartbeat",
			Handler:    _OnebotEventGRPC_MetaHeartbeat_Handler,
		},
		{
			MethodName: "NoticeGroupUpload",
			Handler:    _OnebotEventGRPC_NoticeGroupUpload_Handler,
		},
		{
			MethodName: "NoticeGroupAdmin",
			Handler:    _OnebotEventGRPC_NoticeGroupAdmin_Handler,
		},
		{
			MethodName: "NoticeGroupDecrease",
			Handler:    _OnebotEventGRPC_NoticeGroupDecrease_Handler,
		},
		{
			MethodName: "NoticeGroupIncrease",
			Handler:    _OnebotEventGRPC_NoticeGroupIncrease_Handler,
		},
		{
			MethodName: "NoticeGroupBan",
			Handler:    _OnebotEventGRPC_NoticeGroupBan_Handler,
		},
		{
			MethodName: "NoticeGroupRecall",
			Handler:    _OnebotEventGRPC_NoticeGroupRecall_Handler,
		},
		{
			MethodName: "NoticeGroupNotifyPoke",
			Handler:    _OnebotEventGRPC_NoticeGroupNotifyPoke_Handler,
		},
		{
			MethodName: "NoticeGroupNotifyLuckyKing",
			Handler:    _OnebotEventGRPC_NoticeGroupNotifyLuckyKing_Handler,
		},
		{
			MethodName: "NoticeGroupNotifyHonor",
			Handler:    _OnebotEventGRPC_NoticeGroupNotifyHonor_Handler,
		},
		{
			MethodName: "NoticeFriendAdd",
			Handler:    _OnebotEventGRPC_NoticeFriendAdd_Handler,
		},
		{
			MethodName: "NoticeFriendRecall",
			Handler:    _OnebotEventGRPC_NoticeFriendRecall_Handler,
		},
		{
			MethodName: "RequestFriend",
			Handler:    _OnebotEventGRPC_RequestFriend_Handler,
		},
		{
			MethodName: "RequestGroup",
			Handler:    _OnebotEventGRPC_RequestGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "onebot-plus/pkg/plugin/plugin.proto",
}
