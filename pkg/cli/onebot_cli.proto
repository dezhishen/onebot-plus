syntax = "proto3";
package cli;
import "message_element.proto";
import "onebot-sdk/pkg/proto/message.proto";
import "onebot-sdk/pkg/proto/account.proto";
import "onebot-sdk/pkg/proto/group.proto";
import "onebot-sdk/pkg/proto/system.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

option go_package="../cli";

message GetStrangerInfoReq {
	int64 user_id = 1;
	bool no_cache = 2;
}

message GetRecordReq{
	string file = 1 ;
	string out_format = 2;
}

message SendLikeReq{
	int64 user_id = 1;
	int64 times = 2;
}

message SetFriendAddRequestReq{
	string flag = 1;
	bool approve = 2;
	string remark = 3;
}

message SetGroupKickReq {
	int64 group_id = 1;
	int64 user_id = 2;
	bool reject_rdd_request = 3;
}


message SetGroupBanReq {
	int64 group_id = 1;
	int64 user_id = 2;
	int64 duration = 3;
}
message SetGroupAnonymousBanReq {
	int64 group_id = 1;
	int64 duration = 2;
	string anonymous_flag = 3;
}

message SetGroupWholeBanReq{
	int64 group_id = 1;
	bool enable = 2;
}
message SetGroupAdminReq{
	int64 group_id = 1;
	int64 user_id = 2;
	bool enable = 3;
}
message SetGroupAnonymousReq{
	int64 group_id = 1;
	bool enable = 2;
}

message SetGroupCardReq{
	int64 group_id = 1;
	int64 user_id = 2;
	string card = 3;
}

message SetGroupNameReq{
	int64 group_id = 1;
	string group_name = 2;
}

message SetGroupLeaveReq{
	int64 group_id = 1;
	bool is_dismiss = 2;
}

message SetGroupSpecialTitleReq{
	int64 group_id = 1; 
	int64 user_id = 2;
	int64 duration = 3;
	string special_title = 4;
}

message SetGroupAddRequestReq{
	string flag = 1;
	string subType = 2;
	string reason = 3;
	bool approve = 4;
}

message GetGrooupInfoReq{
	int64 group_id = 1; 
	bool not_cache = 2;

}
message GetGroupMemberInfoReq{
	int64 group_id = 1; 
	int64 user_id = 2;
	bool no_cache = 3;
}

message GetGroupHonorInfoReq {
	int64 group_id = 1;
	string honor_type = 2;
}

message SendGroupForwardMessageReq {
	int64 group_id = 1;
	repeated model.MessageSegmentGRPC message = 2;
}

message SendGroupForwardMessageByRawMsgReq {
	int64 group_id = 1;
	int64 user_id = 2;
	string name = 3;
	repeated model.MessageSegmentGRPC message = 4;
}

service onebot_grpc_cli {
    //发送消息
	rpc SendMsg(model.MsgForSendGRPC)returns(model.SendMessageResultGRPC);
	//发送私聊消息
	rpc SendPrivateMsg(model.PrivateMsgGRPC)returns (model.SendMessageResultGRPC);
	//转发合并消息(群)
	rpc SendGroupForwardMessage(SendGroupForwardMessageReq) returns (model.SendGroupForwardMessageDataResultGRPC);
	//转发合并消息到群
	rpc SendGroupForwardMessageByRawMsg(SendGroupForwardMessageByRawMsgReq) returns (model.SendGroupForwardMessageDataResultGRPC);
	// 发送群消息
	rpc SendGroupMsg(model.GroupMsgGRPC)returns (model.SendMessageResultGRPC);
	//删除消息
	rpc DelMsg(google.protobuf.Int64Value) returns(google.protobuf.Empty);
	//获取消息
	rpc GetMsg(google.protobuf.Int64Value) returns (model.MessageDataResultGRPC);
	//获取转发的消息
	rpc GetForwardMsg(google.protobuf.Int64Value) returns (model.ForwardMessageDataResultGRPC);

	//获取登录信息
	rpc GetLoginInfo(google.protobuf.Empty) returns(model.AccountResultGRPC);
	//获取陌生人信息
	rpc GetStrangerInfo(GetStrangerInfoReq)returns(model.AccountResultGRPC);

	rpc GetCookies(google.protobuf.StringValue) returns(model.CokiesResultGRPC);

	rpc GetCSRFToken(google.protobuf.Empty)returns (model.CSRFTokenResultGRPC);

	rpc GetCredentials(google.protobuf.StringValue)returns (model.CredentialsResultGRPC);
	//获取语音
	rpc GetRecord(GetRecordReq) returns(model.FileResultGRPC);
	//获取图片
	rpc GetImage(google.protobuf.StringValue) returns(model.FileResultGRPC);
	
	rpc SendLike(SendLikeReq) returns (google.protobuf.Empty);
	//处理加好友请求
	rpc SetFriendAddRequest(SetFriendAddRequestReq) returns (google.protobuf.Empty);


	rpc GetFriendList(google.protobuf.Empty) returns (model.FriendListResultGRPC);
	// 群组踢人
	rpc SetGroupKick(SetGroupKickReq) returns (google.protobuf.Empty);

	// 群组禁言
	rpc SetGroupBan(SetGroupBanReq) returns (google.protobuf.Empty);

	// 群组匿名用户禁言
	rpc SetGroupAnonymousBan(SetGroupAnonymousBanReq) returns (google.protobuf.Empty);

	//群组全员禁言
	rpc SetGroupWholeBan(SetGroupWholeBanReq) returns (google.protobuf.Empty);

	//群组设置管理员
	rpc SetGroupAdmin(SetGroupAdminReq) returns (google.protobuf.Empty);
	//群组匿名
	rpc SetGroupAnonymous(SetGroupAnonymousReq) returns (google.protobuf.Empty);
	//设置群名片（群备注）
	rpc SetGroupCard(SetGroupCardReq) returns (google.protobuf.Empty);

	//设置群名
	rpc SetGroupName(SetGroupNameReq) returns (google.protobuf.Empty);

	//退出群组
	rpc SetGroupLeave(SetGroupLeaveReq) returns (google.protobuf.Empty);
	//设置群组专属头衔
	rpc SetGroupSpecialTitle(SetGroupSpecialTitleReq) returns (google.protobuf.Empty);

	//处理加群请求／邀请
	rpc SetGroupAddRequest(SetGroupAddRequestReq) returns (google.protobuf.Empty);

	//获取群信息
	rpc GetGroupInfo(GetGrooupInfoReq)returns(model.GroupResultGRPC);
	//获取群列表
	rpc GetGroupList(google.protobuf.Empty)returns(model.GroupListResultGRPC);

	//获取群成员信息
	rpc GetGroupMemberInfo(GetGroupMemberInfoReq)returns (model.GroupMemberResultGRPC);

	//获取群成员列表
	rpc GetGroupMemberListInfo(google.protobuf.Empty) returns (model.GroupMemberListResultGRPC);

	//获取群荣誉信息
	rpc GetGroupHonorInfo(GetGroupHonorInfoReq) returns(model.GroupHonorInfoResultGRPC);

	rpc CleanCache(google.protobuf.Empty) returns (google.protobuf.Empty);

	rpc SetRestart(google.protobuf.Int64Value) returns (google.protobuf.Empty);

	rpc GetVersionInfo(google.protobuf.Empty)returns (model.VersionInfoResultGRPC);

	rpc GetStatus(google.protobuf.Empty) returns(model.StatusInfoResultGRPC);

	rpc CanSendImage(google.protobuf.Empty) returns(model.BoolYesOfResultGRPC);

	rpc CanSendRecord(google.protobuf.Empty) returns(model.BoolYesOfResultGRPC);
}